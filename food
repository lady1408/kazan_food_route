import streamlit as st
import foliu
from streamlit_folium import st_folium
from openrouteservice import Client
from shapely.geometry import LineString, Point
import requests

st.set_page_config(page_title="–ì–¥–µ –ø–æ–µ—Å—Ç—å –≤ –ö–∞–∑–∞–Ω–∏", layout="wide")
st.title("üçΩÔ∏è –ì–¥–µ –ø–æ–µ—Å—Ç—å –ø–æ –ø—É—Ç–∏ –≤ –ö–∞–∑–∞–Ω–∏")

# –í–≤–æ–¥ —Ç–æ—á–µ–∫ –º–∞—Ä—à—Ä—É—Ç–∞
start = st.text_input("–ù–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ (–∞–¥—Ä–µ—Å)", "–ö–∞–∑–∞–Ω—å, –ö—Ä–µ–º–ª—å")
end = st.text_input("–ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞ (–∞–¥—Ä–µ—Å)", "–ö–∞–∑–∞–Ω—å, –¢–¶ –ö–æ–ª—å—Ü–æ")

# API –∫–ª—é—á OpenRouteService
ORS_API_KEY = st.secrets["ORS_API_KEY"]  # —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –∏–∑ streamlit cloud
client = Client(key=ORS_API_KEY)

# –§—É–Ω–∫—Ü–∏—è –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ Nominatim
def geocode(address):
    url = f'https://nominatim.openstreetmap.org/search?q={address}&format=json'
    res = requests.get(url).json()
    return float(res[0]['lat']), float(res[0]['lon'])

if st.button("–ü–æ–∫–∞–∑–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç –∏ –∫–∞—Ñ–µ"):
    try:
        start_coords = geocode(start)
        end_coords = geocode(end)

        route = client.directions(
            coordinates=[(start_coords[1], start_coords[0]), (end_coords[1], end_coords[0])],
            profile='foot-walking',
            format='geojson'
        )

        route_coords = route['features'][0]['geometry']['coordinates']
        line = LineString(route_coords)

        m = folium.Map(location=start_coords, zoom_start=14)
        folium.PolyLine(locations=[(lat, lon) for lon, lat in route_coords], color="blue").add_to(m)

        buffer = line.buffer(0.005)
        bbox = buffer.bounds

        # –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ f-—Å—Ç—Ä–æ–∫ –∏ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–æ–∫
        overpass_query = (
            '[out:json];'
            'node["amenity"~"restaurant|cafe|fast_food"](' +
            str(bbox[1]) + ',' + str(bbox[0]) + ',' + str(bbox[3]) + ',' + str(bbox[2]) +
            ');out;'
        )

        overpass_url = "http://overpass-api.de/api/interpreter"
        response = requests.get(overpass_url, params={'data': overpass_query})
        data = response.json()

        for el in data['elements']:
            lat, lon = el['lat'], el['lon']
            name = el.get('tags', {}).get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
            if buffer.contains(Point(lon, lat)):
                folium.Marker(location=[lat, lon], popup=name, icon=folium.Icon(color='green')).add_to(m)

        st_folium(m, width=900, height=600)

    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞: {e}")